// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testmodule.proxies;

public class TestImage extends system.proxies.Image
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "TestModule.TestImage";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Base64Data("Base64Data"),
		AddDataPrefix("AddDataPrefix"),
		ImageWidth("ImageWidth"),
		ImageHeight("ImageHeight"),
		PublicThumbnailPath("PublicThumbnailPath"),
		FileID("FileID"),
		Name("Name"),
		DeleteAfterDownload("DeleteAfterDownload"),
		Contents("Contents"),
		HasContents("HasContents"),
		Size("Size");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public TestImage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "TestModule.TestImage"));
	}

	protected TestImage(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject testImageMendixObject)
	{
		super(context, testImageMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("TestModule.TestImage", testImageMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a TestModule.TestImage");
	}

	/**
	 * @deprecated Use 'TestImage.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static testmodule.proxies.TestImage initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return testmodule.proxies.TestImage.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static testmodule.proxies.TestImage initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new testmodule.proxies.TestImage(context, mendixObject);
	}

	public static testmodule.proxies.TestImage load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return testmodule.proxies.TestImage.initialize(context, mendixObject);
	}

	public static java.util.List<testmodule.proxies.TestImage> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<testmodule.proxies.TestImage> result = new java.util.ArrayList<testmodule.proxies.TestImage>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//TestModule.TestImage" + xpathConstraint))
			result.add(testmodule.proxies.TestImage.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of Base64Data
	 */
	public final java.lang.String getBase64Data()
	{
		return getBase64Data(getContext());
	}

	/**
	 * @param context
	 * @return value of Base64Data
	 */
	public final java.lang.String getBase64Data(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Base64Data.toString());
	}

	/**
	 * Set value of Base64Data
	 * @param base64data
	 */
	public final void setBase64Data(java.lang.String base64data)
	{
		setBase64Data(getContext(), base64data);
	}

	/**
	 * Set value of Base64Data
	 * @param context
	 * @param base64data
	 */
	public final void setBase64Data(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String base64data)
	{
		getMendixObject().setValue(context, MemberNames.Base64Data.toString(), base64data);
	}

	/**
	 * @return value of AddDataPrefix
	 */
	public final java.lang.Boolean getAddDataPrefix()
	{
		return getAddDataPrefix(getContext());
	}

	/**
	 * @param context
	 * @return value of AddDataPrefix
	 */
	public final java.lang.Boolean getAddDataPrefix(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.AddDataPrefix.toString());
	}

	/**
	 * Set value of AddDataPrefix
	 * @param adddataprefix
	 */
	public final void setAddDataPrefix(java.lang.Boolean adddataprefix)
	{
		setAddDataPrefix(getContext(), adddataprefix);
	}

	/**
	 * Set value of AddDataPrefix
	 * @param context
	 * @param adddataprefix
	 */
	public final void setAddDataPrefix(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean adddataprefix)
	{
		getMendixObject().setValue(context, MemberNames.AddDataPrefix.toString(), adddataprefix);
	}

	/**
	 * @return value of ImageWidth
	 */
	public final java.lang.Integer getImageWidth()
	{
		return getImageWidth(getContext());
	}

	/**
	 * @param context
	 * @return value of ImageWidth
	 */
	public final java.lang.Integer getImageWidth(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.ImageWidth.toString());
	}

	/**
	 * Set value of ImageWidth
	 * @param imagewidth
	 */
	public final void setImageWidth(java.lang.Integer imagewidth)
	{
		setImageWidth(getContext(), imagewidth);
	}

	/**
	 * Set value of ImageWidth
	 * @param context
	 * @param imagewidth
	 */
	public final void setImageWidth(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer imagewidth)
	{
		getMendixObject().setValue(context, MemberNames.ImageWidth.toString(), imagewidth);
	}

	/**
	 * @return value of ImageHeight
	 */
	public final java.lang.Integer getImageHeight()
	{
		return getImageHeight(getContext());
	}

	/**
	 * @param context
	 * @return value of ImageHeight
	 */
	public final java.lang.Integer getImageHeight(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.ImageHeight.toString());
	}

	/**
	 * Set value of ImageHeight
	 * @param imageheight
	 */
	public final void setImageHeight(java.lang.Integer imageheight)
	{
		setImageHeight(getContext(), imageheight);
	}

	/**
	 * Set value of ImageHeight
	 * @param context
	 * @param imageheight
	 */
	public final void setImageHeight(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer imageheight)
	{
		getMendixObject().setValue(context, MemberNames.ImageHeight.toString(), imageheight);
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final testmodule.proxies.TestImage that = (testmodule.proxies.TestImage) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "TestModule.TestImage";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Override
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
